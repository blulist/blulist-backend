generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Like {
  id         Int      @id @default(autoincrement())
  playlistId Int
  userId     BigInt
  createdAt  DateTime @default(now())
  updatedAt  DateTime
  Playlist   Playlist @relation(fields: [playlistId], references: [id])
  User       User     @relation(fields: [userId], references: [userId])

  @@unique([playlistId, userId])
}

model Playlist {
  id        Int      @id @default(autoincrement())
  ownerId   BigInt
  slug      String   @unique @db.VarChar(16)
  name      String   @db.VarChar(30)
  viewCount Int      @default(0)
  bannerId  String   @default("") @db.VarChar(90)
  isPrivate Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime
  Like      Like[]
  User      User     @relation(fields: [ownerId], references: [userId], onDelete: Cascade)
  Track     Track[]
}

model Track {
  id             Int      @id @default(autoincrement())
  uniqueId       String   @unique
  title          String
  performer      String
  file_unique_id String
  thumbnail      String?  @default("")
  file_id        String
  playlistId     Int
  duration       Int      @default(0)
  addedById      BigInt
  createdAt      DateTime @default(now())
  updatedAt      DateTime
  User           User     @relation(fields: [addedById], references: [userId], onDelete: Cascade)
  Playlist       Playlist @relation(fields: [playlistId], references: [id], onDelete: Cascade)
}

model User {
  id          Int                  @id @default(autoincrement())
  userId      BigInt               @unique
  isAdmin     Boolean              @default(false)
  createdAt   DateTime             @default(now())
  updatedAt   DateTime
  permissions UserPermissionEnum[] @default([MEMBER])
  Like        Like[]
  Playlist    Playlist[]
  Track       Track[]

  @@index([userId])
}

enum UserPermissionEnum {
  OWNER
  MANAGER
  MEMBER
}
